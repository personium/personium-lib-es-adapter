name: Release

on:
  pull_request:
    branches: [ master ]
    types: [ closed ]

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true

    env:
      GITHUB_USER: personiumio
      GITHUB_TOKEN: ${{ secrets.PERSONIUM_GITHUB_TOKEN }}

    steps:
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: git settings
      run: |
        if [ -z "$GITHUB_USER" -o -z "$GITHUB_TOKEN" ]; then
          echo '$GITHUB_USER or $GITHUB_TOKEN is empty.'
          exit 1
        fi
        cat << EOS >~/.netrc
        machine github.com
        login $GITHUB_USER
        password $GITHUB_TOKEN
        EOS
        git config --global user.name "Personium Bot"
        git config --global user.email "personium.io@gmail.com"
        git clone https://github.com/${GITHUB_REPOSITORY}.git .
        git checkout master

    - name: Get Component Name
      run: |
        echo "COMPONENT=$(echo $GITHUB_REPOSITORY | awk -F '/' '{ print $2 }')" >> $GITHUB_ENV

    - name: Remove -SNAPSHOT from pom.xml, and get version string which is to be released.
      run: |
        sed -i 's|\-SNAPSHOT||' pom.xml
        echo "RELEASE_VERSION=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Get extension of artifact
      run: |
        echo "EXT_PACKAGING=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Commit and push
      run: |
        git add pom.xml
        git commit -m "Update to v${RELEASE_VERSION}"
        git push origin master

    - name: Create Release Note
      run: |
        awk '/##/{i++}i==1' CHANGELOG.md | tail +2 > ${{ github.workflow }}_CHANGELOG.md

    - name: Build with maven
      run: |
        mvn -B package --file pom.xml -DskipTests

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Release v${{ env.RELEASE_VERSION }}"
        tag_name: "v${{ env.RELEASE_VERSION }}"
        body_path: ${{ github.workflow }}_CHANGELOG.md
        draft: true
        files: |
          target/${{ env.COMPONENT }}-${{ env.RELEASE_VERSION }}.${{ env.EXT_PACKAGING }}
        prerelease: false

    - name: Delete Temporary Release Note
      run: rm ${{ github.workflow }}_CHANGELOG.md

    - name: Prepare develop branch
      run: |
        git checkout develop
        git rebase master

    - name: Get next -SNAPSHOT version
      run: |
        NEXT_SNAPSHOT_VERSION=$(echo $RELEASE_VERSION | awk -F _ '{print $1"_"$2"_"$3+1"-SNAPSHOT"}')
        echo "NEXT_SNAPSHOT_VERSION=$NEXT_SNAPSHOT_VERSION" >> $GITHUB_ENV
    
    - name: Set next version string.
      run: |
        mvn -B versions:set -DnewVersion=$NEXT_SNAPSHOT_VERSION && mvn -B versions:commit

    - name: Update versions on develop branch
      run: |
        git add pom.xml
        git commit -m "Update to v${NEXT_SNAPSHOT_VERSION}"
        git push origin develop
